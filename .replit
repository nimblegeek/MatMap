modules = ["python-3.11"]

[nix]
channel = "stable-24_05"

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start Flask Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Seed Database"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Check Database Entries"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Remove Duplicates"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Check DB Schema"

[[workflows.workflow]]
name = "Start Flask Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Seed Database"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python seed_db.py"

[[workflows.workflow]]
name = "Check Database Entries"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -c \"from main import app, db; from models import Club; with app.app_context(): clubs = Club.query.all(); print('Total number of clubs:', len(clubs)); [print(f'ID: {club.id}, Name: {club.name}, Location: {club.location}') for club in clubs]\""

[[workflows.workflow]]
name = "Remove Duplicates"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "curl -X POST http://localhost:5000/remove_duplicates"

[[workflows.workflow]]
name = "Check DB Schema"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_db_schema.py"

[deployment]
run = ["sh", "-c", "python main.py"]

[[ports]]
localPort = 5000
externalPort = 80
